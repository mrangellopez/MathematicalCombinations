/*
 * File: Combinations.cpp
 * ----------------------
 * Name: [TODO: enter name here]
 * Section: [TODO: enter section leader here]
 * This file is the starter project for the recursive combinations problem.
 * [TODO: rewrite the documentation]
 */

#include <iostream>
#include "console.h"
#include "simpio.h"
using namespace std;

int Combinations(int n, int k);
int absoluteValue (int i);

int main() {
    int n, k;
    cout << "This program calculates the total number of combinations, C(n,k). " << endl;
    cout << "Negative numbers will be treated as positive numbers." << endl << endl;
    while(true) {
        n = absoluteValue(getInteger("Enter the total number of items, n: "));
        k = absoluteValue(getInteger("Enter the number of selected items, k: "));
        while(k > n) {
            cout << "k can't be greater than n. Try again." << endl;
            k = absoluteValue(getInteger("Enter the number of selected items, k: "));
        }
        cout << "C(" << n << "," << k << ") = " << Combinations(n, k) << " combinations" << endl << endl;
    }
    return 0;
}

/*
 * Calculates and returns the total number of combinations given
 * that there are n items total and k items are selected.
 */
int Combinations(int n, int k) {
    if (n == k) return 1;
    if (k == 0) return 1;
    return Combinations(n-1, k-1) + Combinations(n-1, k);
}

int absoluteValue (int i) {
    if(i < 0) return i * -1;
    return i;
}
